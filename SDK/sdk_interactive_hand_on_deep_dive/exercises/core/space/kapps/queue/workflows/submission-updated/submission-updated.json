{
  "builderVersion": "",
  "schemaVersion": "1.0",
  "version": "",
  "processOwnerEmail": "",
  "lastId": 14,
  "name": "Updated",
  "notes": "",
  "connectors": [
    {
      "from": "start",
      "to": "routine_kinetic_queue_submission_config_v1_1",
      "label": "",
      "value": "",
      "type": "Complete"
    },
    {
      "from": "routine_kinetic_queue_submission_config_v1_1",
      "to": "utilities_create_trigger_v1_2",
      "label": "Has Deferral and Open",
      "value": "!@values['Deferral Token'].to_s.empty? && @submission['Core State'] == \"Draft\"",
      "type": "Complete"
    },
    {
      "from": "routine_kinetic_queue_submission_config_v1_1",
      "to": "routine_kinetic_submission_update_observers_v1_3",
      "label": "Has Parent and Assignment Change",
      "value": "!@submission['Parent Id'].to_s.empty? && (@values['Assigned Individual'] != @values_previous['Assigned Individual'] || @values['Assigned Team'] != @values_previous['Assigned Team'])",
      "type": "Complete"
    },
    {
      "from": "routine_kinetic_queue_submission_config_v1_1",
      "to": "routine_kinetic_submission_retrieve_v1_4",
      "label": "Assignment Changed",
      "value": " (@values['Assigned Individual'] != @values_previous['Assigned Individual'] || @values['Assigned Team'] != @values_previous['Assigned Team'])",
      "type": "Complete"
    },
    {
      "from": "routine_kinetic_queue_submission_config_v1_1",
      "to": "routine_kinetic_submission_update_observers_v1_14",
      "label": "",
      "value": "",
      "type": "Complete"
    },
    {
      "from": "routine_kinetic_submission_retrieve_v1_4",
      "to": "system_loop_head_v1_5",
      "label": "",
      "value": "",
      "type": "Complete"
    },
    {
      "from": "routine_kinetic_submission_retrieve_v1_4",
      "to": "system_noop_v1_11",
      "label": "Open",
      "value": "!['Complete','Closed','Cancelled'].include?(@values['Status'].to_s)",
      "type": "Complete"
    },
    {
      "from": "system_loop_head_v1_5",
      "to": "routine_kinetic_submission_retrieve_v1_6",
      "label": "",
      "value": "",
      "type": "Complete"
    },
    {
      "from": "system_loop_head_v1_5",
      "to": "system_loop_tail_v1_9",
      "label": "",
      "value": "",
      "type": "Complete"
    },
    {
      "from": "routine_kinetic_submission_retrieve_v1_6",
      "to": "routine_kinetic_submission_update_observers_v1_7",
      "label": "Child Open",
      "value": "@results['Get Child Submission']['Core State'] != 'Closed'",
      "type": "Complete"
    },
    {
      "from": "routine_kinetic_submission_retrieve_v1_6",
      "to": "system_junction_v1_8",
      "label": "Child Closed",
      "value": "@results['Get Child Submission']['Core State'] == 'Closed'",
      "type": "Complete"
    },
    {
      "from": "routine_kinetic_submission_update_observers_v1_7",
      "to": "system_junction_v1_8",
      "label": "",
      "value": "",
      "type": "Complete"
    },
    {
      "from": "system_junction_v1_8",
      "to": "system_loop_tail_v1_9",
      "label": "",
      "value": "",
      "type": "Complete"
    },
    {
      "from": "system_loop_tail_v1_9",
      "to": "routine_kinetic_finish_v1_10",
      "label": "",
      "value": "",
      "type": "Complete"
    },
    {
      "from": "system_noop_v1_11",
      "to": "routine_kinetic_email_template_notification_send_v1_12",
      "label": "Has Assignee",
      "value": "!@values['Assigned Individual'].nil? && @values['Assigned Individual'] != @submission['Created By']",
      "type": "Complete"
    },
    {
      "from": "system_noop_v1_11",
      "to": "routine_kinetic_email_template_notification_send_v1_13",
      "label": "No Assignee and Has Due Date",
      "value": "@values['Assigned Individual'].nil? && @values.has_key?('Due Date') && !@values['Due Date'].nil?",
      "type": "Complete"
    }
  ],
  "nodes": [
    {
      "configured": true,
      "defers": false,
      "deferrable": false,
      "visible": false,
      "name": "Start",
      "messages": [

      ],
      "dependents": {
        "task": [
          {
            "label": "",
            "type": "Complete",
            "value": "",
            "content": "routine_kinetic_queue_submission_config_v1_1"
          }
        ]
      },
      "id": "start",
      "position": {
        "x": 594,
        "y": 22
      },
      "version": 1,
      "parameters": [

      ],
      "definitionId": "system_start_v1"
    },
    {
      "configured": true,
      "defers": true,
      "deferrable": true,
      "visible": false,
      "name": "Get Config",
      "messages": [

      ],
      "dependents": {
        "task": [
          {
            "label": "Has Deferral and Open",
            "type": "Complete",
            "value": "!@values['Deferral Token'].to_s.empty? && @submission['Core State'] == \"Draft\"",
            "content": "utilities_create_trigger_v1_2"
          },
          {
            "label": "Has Parent and Assignment Change",
            "type": "Complete",
            "value": "!@submission['Parent Id'].to_s.empty? && (@values['Assigned Individual'] != @values_previous['Assigned Individual'] || @values['Assigned Team'] != @values_previous['Assigned Team'])",
            "content": "routine_kinetic_submission_update_observers_v1_3"
          },
          {
            "label": "Assignment Changed",
            "type": "Complete",
            "value": " (@values['Assigned Individual'] != @values_previous['Assigned Individual'] || @values['Assigned Team'] != @values_previous['Assigned Team'])",
            "content": "routine_kinetic_submission_retrieve_v1_4"
          },
          {
            "label": "",
            "type": "Complete",
            "value": "",
            "content": "routine_kinetic_submission_update_observers_v1_14"
          }
        ]
      },
      "id": "routine_kinetic_queue_submission_config_v1_1",
      "position": {
        "x": 591,
        "y": 109
      },
      "version": 1,
      "parameters": [
        {
          "dependsOnId": "",
          "dependsOnValue": "",
          "description": "Submission Source Data Used to Build Configuration",
          "id": "Source Data",
          "label": "Source Data",
          "menu": "",
          "value": "<%=@source['Data']%>",
          "required": false
        }
      ],
      "definitionId": "routine_kinetic_queue_submission_config_v1"
    },
    {
      "configured": true,
      "defers": false,
      "deferrable": false,
      "visible": true,
      "name": "Update Parent Activity Record",
      "messages": [

      ],
      "dependents": "",
      "id": "utilities_create_trigger_v1_2",
      "position": {
        "x": 870,
        "y": 99
      },
      "version": 1,
      "parameters": [
        {
          "dependsOnId": "",
          "dependsOnValue": "",
          "description": "",
          "id": "action_type",
          "label": "Action Type",
          "menu": "Update,Complete",
          "value": "Update",
          "required": true
        },
        {
          "dependsOnId": "",
          "dependsOnValue": "",
          "description": "",
          "id": "deferral_token",
          "label": "Deferral Token",
          "menu": "",
          "value": "<%= @values['Deferral Token']%>",
          "required": true
        },
        {
          "dependsOnId": "",
          "dependsOnValue": "",
          "description": "",
          "id": "deferred_variables",
          "label": "Deferred Results",
          "menu": "",
          "value": "",
          "required": false
        },
        {
          "dependsOnId": "",
          "dependsOnValue": "",
          "description": "",
          "id": "message",
          "label": "Message",
          "menu": "",
          "value": "Activity Update",
          "required": false
        }
      ],
      "definitionId": "utilities_create_trigger_v1"
    },
    {
      "configured": true,
      "defers": false,
      "deferrable": true,
      "visible": false,
      "name": "Update Parent Observers",
      "messages": [

      ],
      "dependents": "",
      "id": "routine_kinetic_submission_update_observers_v1_3",
      "position": {
        "x": 595,
        "y": 243
      },
      "version": 1,
      "parameters": [
        {
          "dependsOnId": "",
          "dependsOnValue": "",
          "description": "Id of the submission to update",
          "id": "Submission Id",
          "label": "Submission Id",
          "menu": "",
          "value": "<%= @submission['Parent Id']%>",
          "required": true
        },
        {
          "dependsOnId": "",
          "dependsOnValue": "",
          "description": "JSON array of team names to add to Observing Teams field on Submission",
          "id": "Observing Teams",
          "label": "Observing Teams",
          "menu": "",
          "value": "<%= @values['Assigned Team']%>",
          "required": false
        },
        {
          "dependsOnId": "",
          "dependsOnValue": "",
          "description": "JSON array of usernames to add to Observing Individuals field on Submission",
          "id": "Observing Individuals",
          "label": "Observing Individuals",
          "menu": "",
          "value": "<%= (@values['Assigned Team'].to_s.empty? && !@values['Assigned Individual'].to_s.empty?) ? [@values['Assigned Individual']].to_json : nil%>",
          "required": false
        },
        {
          "dependsOnId": "",
          "dependsOnValue": "",
          "description": "true or false if existing observers should be replaced",
          "id": "Replace Existing",
          "label": "Replace Existing",
          "menu": "",
          "value": "false",
          "required": false
        }
      ],
      "definitionId": "routine_kinetic_submission_update_observers_v1"
    },
    {
      "configured": true,
      "defers": true,
      "deferrable": true,
      "visible": false,
      "name": "Get Submission Children",
      "messages": [

      ],
      "dependents": {
        "task": [
          {
            "label": "",
            "type": "Complete",
            "value": "",
            "content": "system_loop_head_v1_5"
          },
          {
            "label": "Open",
            "type": "Complete",
            "value": "!['Complete','Closed','Cancelled'].include?(@values['Status'].to_s)",
            "content": "system_noop_v1_11"
          }
        ]
      },
      "id": "routine_kinetic_submission_retrieve_v1_4",
      "position": {
        "x": 165,
        "y": 109
      },
      "version": 1,
      "parameters": [
        {
          "dependsOnId": "",
          "dependsOnValue": "",
          "description": "The Id of the submission to retrieve",
          "id": "Id",
          "label": "Id",
          "menu": "",
          "value": "<%= @submission['Id']%>",
          "required": true
        }
      ],
      "definitionId": "routine_kinetic_submission_retrieve_v1"
    },
    {
      "configured": true,
      "defers": false,
      "deferrable": false,
      "visible": false,
      "name": "Children Loop Head",
      "messages": [

      ],
      "dependents": {
        "task": [
          {
            "label": "",
            "type": "Complete",
            "value": "",
            "content": "routine_kinetic_submission_retrieve_v1_6"
          },
          {
            "label": "",
            "type": "Complete",
            "value": "",
            "content": "system_loop_tail_v1_9"
          }
        ]
      },
      "id": "system_loop_head_v1_5",
      "position": {
        "x": 164,
        "y": 219
      },
      "version": 1,
      "parameters": [
        {
          "dependsOnId": "",
          "dependsOnValue": "",
          "description": "The source that contains the data to use to create each task in the loop.",
          "id": "data_source",
          "label": "Data Source:",
          "menu": "",
          "value": "<children><%=JSON.parse(@results['Get Submission Children']['Children JSON']).collect {|child| \"<child>#{child['id']}</child>\"}.join%></children>",
          "required": true
        },
        {
          "dependsOnId": "",
          "dependsOnValue": "",
          "description": "The XPath statement to indicate what data records to process.",
          "id": "loop_path",
          "label": "Loop Path:",
          "menu": "",
          "value": "/children/child",
          "required": true
        },
        {
          "dependsOnId": "",
          "dependsOnValue": "",
          "description": "The local variable name used to represent the data used in loop tasks.",
          "id": "var_name",
          "label": "Variable Name:",
          "menu": "",
          "value": "childId",
          "required": false
        }
      ],
      "definitionId": "system_loop_head_v1"
    },
    {
      "configured": true,
      "defers": true,
      "deferrable": true,
      "visible": false,
      "name": "Get Child Submission",
      "messages": [

      ],
      "dependents": {
        "task": [
          {
            "label": "Child Open",
            "type": "Complete",
            "value": "@results['Get Child Submission']['Core State'] != 'Closed'",
            "content": "routine_kinetic_submission_update_observers_v1_7"
          },
          {
            "label": "Child Closed",
            "type": "Complete",
            "value": "@results['Get Child Submission']['Core State'] == 'Closed'",
            "content": "system_junction_v1_8"
          }
        ]
      },
      "id": "routine_kinetic_submission_retrieve_v1_6",
      "position": {
        "x": 385,
        "y": 219
      },
      "version": 1,
      "parameters": [
        {
          "dependsOnId": "",
          "dependsOnValue": "",
          "description": "The Id of the submission to retrieve",
          "id": "Id",
          "label": "Id",
          "menu": "",
          "value": "<%= @childId %>",
          "required": true
        }
      ],
      "definitionId": "routine_kinetic_submission_retrieve_v1"
    },
    {
      "configured": true,
      "defers": false,
      "deferrable": true,
      "visible": false,
      "name": "Update Child Observers",
      "messages": [

      ],
      "dependents": {
        "task": [
          {
            "label": "",
            "type": "Complete",
            "value": "",
            "content": "system_junction_v1_8"
          }
        ]
      },
      "id": "routine_kinetic_submission_update_observers_v1_7",
      "position": {
        "x": 261,
        "y": 355
      },
      "version": 1,
      "parameters": [
        {
          "dependsOnId": "",
          "dependsOnValue": "",
          "description": "Id of the submission to update",
          "id": "Submission Id",
          "label": "Submission Id",
          "menu": "",
          "value": "<%= @childId %>",
          "required": true
        },
        {
          "dependsOnId": "",
          "dependsOnValue": "",
          "description": "JSON array of team names to add to Observing Teams field on Submission",
          "id": "Observing Teams",
          "label": "Observing Teams",
          "menu": "",
          "value": "<%= @values['Assigned Team']%>",
          "required": false
        },
        {
          "dependsOnId": "",
          "dependsOnValue": "",
          "description": "JSON array of usernames to add to Observing Individuals field on Submission",
          "id": "Observing Individuals",
          "label": "Observing Individuals",
          "menu": "",
          "value": "<%= (@values['Assigned Team'].to_s.empty? && !@values['Assigned Individual'].to_s.empty?) ? [@values['Assigned Individual']].to_json : nil%>",
          "required": false
        },
        {
          "dependsOnId": "",
          "dependsOnValue": "",
          "description": "true or false if existing observers should be replaced",
          "id": "Replace Existing",
          "label": "Replace Existing",
          "menu": "",
          "value": "false",
          "required": false
        }
      ],
      "definitionId": "routine_kinetic_submission_update_observers_v1"
    },
    {
      "configured": true,
      "defers": false,
      "deferrable": false,
      "visible": false,
      "name": "Children Updated - Proceed",
      "messages": [

      ],
      "dependents": {
        "task": [
          {
            "label": "",
            "type": "Complete",
            "value": "",
            "content": "system_loop_tail_v1_9"
          }
        ]
      },
      "id": "system_junction_v1_8",
      "position": {
        "x": 388,
        "y": 499
      },
      "version": 1,
      "parameters": [

      ],
      "definitionId": "system_junction_v1"
    },
    {
      "configured": true,
      "defers": false,
      "deferrable": false,
      "visible": false,
      "name": "Children Loop Tail",
      "messages": [

      ],
      "dependents": {
        "task": [
          {
            "label": "",
            "type": "Complete",
            "value": "",
            "content": "routine_kinetic_finish_v1_10"
          }
        ]
      },
      "id": "system_loop_tail_v1_9",
      "position": {
        "x": 163,
        "y": 487
      },
      "version": 1,
      "parameters": [
        {
          "dependsOnId": "",
          "dependsOnValue": "",
          "description": "How many loop processes must be completed before continuing?",
          "id": "type",
          "label": "Type:",
          "menu": "All,Some,Any",
          "value": "All",
          "required": true
        },
        {
          "dependsOnId": "type",
          "dependsOnValue": "Some",
          "description": "If some, how many?",
          "id": "number",
          "label": "Number:",
          "menu": "",
          "value": "",
          "required": false
        }
      ],
      "definitionId": "system_loop_tail_v1"
    },
    {
      "configured": true,
      "defers": false,
      "deferrable": true,
      "visible": false,
      "name": "Finish",
      "messages": [

      ],
      "dependents": "",
      "id": "routine_kinetic_finish_v1_10",
      "position": {
        "x": 160,
        "y": 605
      },
      "version": 1,
      "parameters": [
        {
          "dependsOnId": "",
          "dependsOnValue": "",
          "description": "The Id of the completed run",
          "id": "Run Id",
          "label": "Run Id",
          "menu": "",
          "value": "<%=@run['Id']%>",
          "required": false
        }
      ],
      "definitionId": "routine_kinetic_finish_v1"
    },
    {
      "configured": true,
      "defers": false,
      "deferrable": false,
      "visible": false,
      "name": "Notification",
      "messages": [

      ],
      "dependents": {
        "task": [
          {
            "label": "Has Assignee",
            "type": "Complete",
            "value": "!@values['Assigned Individual'].nil? && @values['Assigned Individual'] != @submission['Created By']",
            "content": "routine_kinetic_email_template_notification_send_v1_12"
          },
          {
            "label": "No Assignee and Has Due Date",
            "type": "Complete",
            "value": "@values['Assigned Individual'].nil? && @values.has_key?('Due Date') && !@values['Due Date'].nil?",
            "content": "routine_kinetic_email_template_notification_send_v1_13"
          }
        ]
      },
      "id": "system_noop_v1_11",
      "position": {
        "x": -188,
        "y": 110
      },
      "version": 1,
      "parameters": [

      ],
      "definitionId": "system_noop_v1"
    },
    {
      "configured": true,
      "defers": true,
      "deferrable": true,
      "visible": false,
      "name": "Notify - Assignee",
      "messages": [

      ],
      "dependents": "",
      "id": "routine_kinetic_email_template_notification_send_v1_12",
      "position": {
        "x": -304,
        "y": 402
      },
      "version": 1,
      "parameters": [
        {
          "dependsOnId": "",
          "dependsOnValue": "",
          "description": "Comma separated list of recipients (Usernames, SMTP Addresses, and/or Team Names)",
          "id": "Recipient List",
          "label": "Recipient List",
          "menu": "",
          "value": "<%= @values['Assigned Individual']%>",
          "required": true
        },
        {
          "dependsOnId": "",
          "dependsOnValue": "",
          "description": "Name of the notification template to use when sending this email",
          "id": "Notification Template Name",
          "label": "Notification Template Name",
          "menu": "",
          "value": "<%=@results['Get Config']['Notification Template Name - Create']%>",
          "required": true
        },
        {
          "dependsOnId": "",
          "dependsOnValue": "",
          "description": "JSON input of miscellaneous values.  These values are used to replace placeholder content in notification messages.",
          "id": "JSON Variables",
          "label": "JSON Variables",
          "menu": "",
          "value": "<%={\n  \"Target\"=> \"you\"\n}.to_json%>",
          "required": false
        },
        {
          "dependsOnId": "",
          "dependsOnValue": "",
          "description": "The slug of the Kapp sending the notification (ex: services, queue, etc.)",
          "id": "Kapp Slug Initiating Notification",
          "label": "Kapp Slug Initiating Notification",
          "menu": "",
          "value": "<%= @kapp['Slug']%>",
          "required": true
        },
        {
          "dependsOnId": "",
          "dependsOnValue": "",
          "description": "Id of the submission to get values for, required if using those or attachments in the message",
          "id": "Related Submission Id",
          "label": "Related Submission Id",
          "menu": "",
          "value": "<%= @submission['Id']%>",
          "required": false
        },
        {
          "dependsOnId": "",
          "dependsOnValue": "",
          "description": "The slug of the Form sending the notification (ex: work-order, cleaning, etc.)",
          "id": "Form Slug Initiating Notification",
          "label": "Form Slug Initiating Notification",
          "menu": "",
          "value": "<%= @form['Slug']%>",
          "required": false
        },
        {
          "dependsOnId": "",
          "dependsOnValue": "",
          "description": "If the Related Submission Id, or Form Slug is a datastore form.",
          "id": "Is Datastore",
          "label": "Is Datastore",
          "menu": "",
          "value": "false",
          "required": false
        }
      ],
      "definitionId": "routine_kinetic_email_template_notification_send_v1"
    },
    {
      "configured": true,
      "defers": true,
      "deferrable": true,
      "visible": false,
      "name": "Notify - Team with Alternate Emails",
      "messages": [

      ],
      "dependents": "",
      "id": "routine_kinetic_email_template_notification_send_v1_13",
      "position": {
        "x": -31,
        "y": 403
      },
      "version": 1,
      "parameters": [
        {
          "dependsOnId": "",
          "dependsOnValue": "",
          "description": "Comma separated list of recipients (Usernames, SMTP Addresses, and/or Team Names)",
          "id": "Recipient List",
          "label": "Recipient List",
          "menu": "",
          "value": "<%= @values['Assigned Team']%>",
          "required": true
        },
        {
          "dependsOnId": "",
          "dependsOnValue": "",
          "description": "Name of the notification template to use when sending this email",
          "id": "Notification Template Name",
          "label": "Notification Template Name",
          "menu": "",
          "value": "<%=@results['Get Config']['Notification Template Name - Create']%>",
          "required": true
        },
        {
          "dependsOnId": "",
          "dependsOnValue": "",
          "description": "JSON input of miscellaneous values.  These values are used to replace placeholder content in notification messages.",
          "id": "JSON Variables",
          "label": "JSON Variables",
          "menu": "",
          "value": "<%={\n  \"Target\"=> \"the #{@values['Assigned Team']} team\"\n}.to_json%>",
          "required": false
        },
        {
          "dependsOnId": "",
          "dependsOnValue": "",
          "description": "The slug of the Kapp sending the notification (ex: services, queue, etc.)",
          "id": "Kapp Slug Initiating Notification",
          "label": "Kapp Slug Initiating Notification",
          "menu": "",
          "value": "<%= @kapp['Slug']%>",
          "required": true
        },
        {
          "dependsOnId": "",
          "dependsOnValue": "",
          "description": "Id of the submission to get values for, required if using those or attachments in the message",
          "id": "Related Submission Id",
          "label": "Related Submission Id",
          "menu": "",
          "value": "<%= @submission['Id']%>",
          "required": false
        },
        {
          "dependsOnId": "",
          "dependsOnValue": "",
          "description": "The slug of the Form sending the notification (ex: work-order, cleaning, etc.)",
          "id": "Form Slug Initiating Notification",
          "label": "Form Slug Initiating Notification",
          "menu": "",
          "value": "<%= @form['Slug']%>",
          "required": false
        },
        {
          "dependsOnId": "",
          "dependsOnValue": "",
          "description": "If the Related Submission Id, or Form Slug is a datastore form.",
          "id": "Is Datastore",
          "label": "Is Datastore",
          "menu": "",
          "value": "false",
          "required": false
        }
      ],
      "definitionId": "routine_kinetic_email_template_notification_send_v1"
    },
    {
      "configured": true,
      "defers": true,
      "deferrable": true,
      "visible": false,
      "name": "Update Observers with prev values",
      "messages": [

      ],
      "dependents": "",
      "id": "routine_kinetic_submission_update_observers_v1_14",
      "position": {
        "x": 873,
        "y": 245
      },
      "version": 1,
      "parameters": [
        {
          "dependsOnId": "",
          "dependsOnValue": "",
          "description": "Id of the submission to update",
          "id": "Submission Id",
          "label": "Submission Id",
          "menu": "",
          "value": "<%=  @submission['Id'] %>",
          "required": true
        },
        {
          "dependsOnId": "",
          "dependsOnValue": "",
          "description": "JSON array of team names to add to Observing Teams field on Submission",
          "id": "Observing Teams",
          "label": "Observing Teams",
          "menu": "",
          "value": "<%=  @values_previous['Observing Teams'] %>",
          "required": false
        },
        {
          "dependsOnId": "",
          "dependsOnValue": "",
          "description": "JSON array of usernames to add to Observing Individuals field on Submission",
          "id": "Observing Individuals",
          "label": "Observing Individuals",
          "menu": "",
          "value": "<%=  @values_previous['Observing Individuals'] %>",
          "required": false
        },
        {
          "dependsOnId": "",
          "dependsOnValue": "",
          "description": "true or false if existing observers should be replaced",
          "id": "Replace Existing",
          "label": "Replace Existing",
          "menu": "",
          "value": "false",
          "required": false
        }
      ],
      "definitionId": "routine_kinetic_submission_update_observers_v1"
    }
  ]
}