{
  "anonymous": false,
  "attributes": [

  ],
  "bridgedResources": [
    {
      "model": "Submissions",
      "name": "Pending Approval",
      "order": [

      ],
      "parameters": [

      ],
      "qualification": "Pending Approval",
      "status": "Active"
    }
  ],
  "categorizations": [

  ],
  "customHeadContent": "<style>\n  table a:link {\n      text-decoration: underline;\n  }\n</style>",
  "description": "",
  "indexDefinitions": [
    {
      "name": "closedBy",
      "parts": [
        "closedBy"
      ],
      "unique": false
    },
    {
      "name": "createdBy",
      "parts": [
        "createdBy"
      ],
      "unique": false
    },
    {
      "name": "handle",
      "parts": [
        "handle"
      ],
      "unique": false
    },
    {
      "name": "submittedBy",
      "parts": [
        "submittedBy"
      ],
      "unique": false
    },
    {
      "name": "updatedBy",
      "parts": [
        "updatedBy"
      ],
      "unique": false
    }
  ],
  "integrations": [

  ],
  "name": "Approvals Console",
  "notes": null,
  "pages": [
    {
      "advanceCondition": null,
      "displayCondition": null,
      "displayPage": null,
      "elements": [
        {
          "enabled": true,
          "dataType": "json",
          "requiredMessage": null,
          "name": "Teams",
          "choicesResourceName": null,
          "omitWhenHidden": null,
          "renderAttributes": {
          },
          "renderType": "checkbox",
          "pattern": null,
          "defaultValue": null,
          "visible": true,
          "choices": [

          ],
          "label": "Teams",
          "choicesRunIf": null,
          "constraints": [

          ],
          "events": [

          ],
          "defaultResourceName": null,
          "type": "field",
          "key": "f1",
          "required": false
        },
        {
          "type": "button",
          "label": "Search",
          "name": "Search",
          "visible": true,
          "enabled": true,
          "renderType": "custom",
          "renderAttributes": {
          },
          "events": [
            {
              "name": "Note",
              "type": "Click",
              "action": "Custom",
              "code": "// Event for this button is bound in the page load event"
            }
          ]
        },
        {
          "type": "button",
          "renderType": "custom",
          "name": "Clear",
          "label": "Clear",
          "visible": true,
          "enabled": true,
          "renderAttributes": {
            "style": "margin-left: 1em; "
          },
          "events": [
            {
              "name": "Clear",
              "type": "Click",
              "action": "Custom",
              "code": "// Clear Teams values\nK('field[Teams]').value([])\n// Clear Table\nvar table = $(`#${searchConfig['submissionsTableConfig'].resultsContainerId}`).DataTable()\ntable.clear().draw();"
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Table Section",
          "title": null,
          "visible": true,
          "omitWhenHidden": null,
          "renderAttributes": {
          },
          "elements": [

          ]
        }
      ],
      "events": [
        {
          "name": "Open Approvals",
          "type": "Load",
          "action": "Custom",
          "code": "searchConfig = typeof searchConfig===\"object\"? searchConfig : {};\n  // Example of full configuration of a search object to return results as a DataTable\nsearchConfig['submissionsTableConfig'] ={\n\tresultsContainer: '<table cellspacing=\"0\", border=\"0\", class=\"display\", style=\"width: 100%;\">',\n\tdata: [\n\t  { \n\t\ttitle: \"id\",\n\t\tname: \"origin.id\",\n\t\tvisible: false\n\t  },\n\t  { \n\t\ttitle: \"Queue ID\",\n\t\tname: \"id\",\n\t\tvisible: false\n\t  },\n\t  { \n\t\ttitle: \"KSR\",\n\t\tname: \"label\",\n\t\trender: function ( data, type, full, meta ) {\n\t\t\treturn `<a href=\"/#/kapps/services/requests/request/${full['origin']['id']}/activity\" target='_blank' style='width:50px' title='View' class='btn-view' value='View'>${data}</a>`;\n\t\t}\n\t  },\n\t  { \n\t\ttitle: \"Created At\",\n\t\tname: \"createdAt\",\n\t\trender: function ( data, type, full, meta ) {\n\t\t\tif (type == \"display\") {return new Date(data).toLocaleString();}\n\t\t\telse {return data;}\n\t\t}\n\t  },\n\t  { \n\t\ttitle: \"Status\",\n\t\tname: \"values.Status\",\n        // render: function ( data, type, full, meta ) {\n        //   return  `<a href=\"/#/kapps/queue/item/${full.id}\" target='_blank'>${data}</a>`\n        // }\n\t  },\n\t  { \n\t\ttitle: \"Assigned Individual\",\n\t\tname: \"values.Assigned Individual Display Name\",\n\t\trender: function ( data, type, full, meta ) {\n            const assignedIndividual = typeof data === \"undefined\" || data == null ? full.values[\"Assigned Individual\"] : data;\n\t\t\treturn assignedIndividual;\n\t\t}\n\t  },\n\t  { \n\t\ttitle: \"Assigned Team\",\n\t\tname: \"values.Assigned Team Display Name\",\n\t\trender: function ( data, type, full, meta ) {\n\t\t\tconst assignedTeam = typeof data !== \"undefined\" && full.values[\"Assigned Team\"] ? full.values[\"Assigned Team\"] : \"\";\n            return  `<a class = \"team_link\" value = ${assignedTeam} href = \"javascript:void(0)\">${assignedTeam}</a>`\n\t\t}\n\t},\n\t{ \n\t\trender: function ( data, type, full, meta ) {\n            return  `\n             <div class=\"dropdown\" style=\"box-sizing: border-box;\">\n              <button aria-label=\"More Actions\" aria-haspopup=\"true\" class=\"btn btn-outline-tertiary\" aria-expanded=\"false\">\n                 <span>Actions</span> <span class=\"fa fa-chevron-down fa-fw\"></span>\n              </button>\n              <div tabindex=\"-1\" role=\"menu\" aria-hidden=\"true\" class=\"dropdown-menu dropdown-menu-right\">\n                 <button class=\"dropdown-item reassignButton\" aria-label=\"Reassign\">Reassign</button>\n                 <button class=\"dropdown-item emailButton\" aria-label=\"Send Reminder\">Send Reminder</button>\n              </div>\n            </div>`\n\t\t}\n\t},  \n\t],\n\tresultsContainerId: 'submssionsTable',\n\tbefore: function(configObj){ \n\t},\n\tsuccess: function (configObj){\n\t},\n\tsuccessEmpty: function(configObj){\n\t  // Render the table even if the results are empty. (ie: on page load)\n\t  configObj.renderer.type(configObj.destination, configObj);\n\t},\n\terror: function(configObj){\n\t},\n\tcomplete: function(configObj){\n      // Create Click Event for Action Dropdown\n      configObj.tableObj.on('click', 'td .dropdown', function(e){\n        e.stopPropagation();\n        visible_dropdowns = $('div.dropdown-menu:visible');\n        drop_down = $(this).children('div.dropdown-menu')\n        visible_dropdowns.not(drop_down).hide();\n        \n        drop_down.toggle()\n      });\n      // Create Click Event for the Reassign Action\n      configObj.tableObj.on('click', 'td .reassignButton', function(e){\n        row = $(this).parents('tr')\n        data = configObj.tableObj.row(row).data();\n        bundle.helpers.openModalForm(\n          {\n            \"formSlug\":\"approval-reassignment-and-reminder\",\n            \"kappSlug\":\"services\",\n            \"values\":{\"Submission Id\":data.id},\n            \"title\": \"Select a New Approver\"\n          });\n        $('table tr').find('div .dropdown-menu:visible').hide();\n        e.stopPropagation();\n      });\n      // Create Click Event for the Email Action\n      configObj.tableObj.on('click', 'td .emailButton', function(e){\n        row = $(this).parents('tr');\n        data = configObj.tableObj.row(row).data();\n        sendReminderEmail(data);\n        $('table tr').find('div .dropdown-menu:visible').hide()\n        e.stopPropagation();\n      });\n      // Create Click Event for the Assigned Team Column\n      configObj.tableObj.on('click', 'td .team_link', function(e){\n        console.log(e.target.value);\n        row = $(this).parents('tr')\n        data = configObj.tableObj.row(row).data();\n        bundle.helpers.openModalForm(\n          {\n           \"formSlug\":\"display-team-members\",\n           \"kappSlug\":\"services\",\n           \"values\":{\"Team Name\":data['values']['Assigned Team']},\n           \"title\":`${data['values']['Assigned Team']} Team`\n          });\n      });\n\t},\n\t// Executes on click of element with class of select\n\tclickCallback: function(element, results){\n\t},\n\tremoveOnClick: false,\n\trenderer: {\n\t\ttype: DataViewer.Renderers.DataTables, // Passing a function here allows for better customization\n\t\toptions: {\n\t\t  // Options for Renderer\n\t\t  processSingleResult: false,\n\t\t  // DataTable OPTIONS; Passing options here make it clear that they are being passed to data tables\n\t\t  // responsive: OPTIONAL Default for \"BridgeDataTable\" is true but can be over written.\n\t\t  responsive: false,\n\t\t  //autoWidth: false,\n\t\t  dom: 'Brt',\n\t\t  pageLength: 15,\n\t\t  paging: false,\n          order: [[3, 'desc']],\n\t\t},\n\t},       \n}\n \nK('button[Search]').element().onclick = function() {\n\tteams = K('field[Teams]').value();\n\tif (teams.length > 0 ) {getSubmissions(teams)}\n    else { \n      var table = $(`#${searchConfig['submissionsTableConfig'].resultsContainerId}`).DataTable()\n      table.clear().draw();\n    };\n};\n\n$('body').click(function(e){\n    var container = $(\".dropdown\");\n    if (container.has(e.target).length === 0)\n    {\n      $('table tr').find('div .dropdown-menu:visible').hide()\n    }\n});\n\nfunction processComplexData(data){\n\tnewData = [];\n\tdata['submissions'].forEach(submission => {submission['children'\n\t\t].map(child=>{if (child['coreState'] != \"Closed\"){newData.push(child)};\n\t\t})\n\t})\n\treturn newData;\n}\n\nfunction sendReminderEmail(data){\n  values = {\"Submission Id\": data['id'] };\n  $.ajax({\n    url: '/app/kapps/services/webApis/send-assignment-reminder',\n    type: \"POST\",\n    data: JSON.stringify(values),\n  \tcontentType : \"application/json\",\n    success: function (response) {\n      bundle.helpers.openModalForm(\n          {\n            \"formSlug\":\"approval-reassignment-and-reminder\",\n            \"kappSlug\":\"services\",\n            \"values\":{\"Email Sent Text\":`A reminder eamil will be sent to the assigned individual and/or team`},\n            \"title\": \"Email Sent\"\n          });\n    },\n    error: function (error) {\n      \tconsole.log(`Error ${error}`);\n    }\n  });\n\n}\n\n$.ajax({\n    url: '/app/api/v1/me?include=memberships',\n    type: \"GET\",\n    dataType: \"json\",\n    success: function (data) {\n      let membershipCheckboxArray = data['memberships'].map((memberships, index, array) => { return {\"label\": memberships['team']['name'], \"value\": memberships['team']['name']}; }).filter((team)=> {return !team['label'].startsWith('Role::')});\n      K('field[Teams]').options(membershipCheckboxArray);\n    },\n    error: function (error) {\n      \tconsole.log(`Error ${error}`);\n    }\n});\n\ngetSubmissions = function (membershipArray){\n\tvar str_membership = `(\"${membershipArray.join(\"\\\", \\\"\")}\")`\n\tvar url = `/app/api/v1/kapps/services/submissions?direction=DESC&limit=1000&q=values[Status] = \"Pending Approval\" AND values[Observing Teams] IN ${str_membership}&include=children.details,values,children.form, children.values`;\n\t$.ajax({\n\t\ttype: \"GET\",\n\t\turl: url,\n\t\ttype: \"GET\",\n\t\tdataType: \"json\",\n\t\tsuccess: function (data) {\n\t\t\tdata = processComplexData(data);\n\t\t\tsearchConfig.submissionsTableConfig.response = data;\n\t\t\tDataViewer.renderResults($(K('section[Table Section]').element()), searchConfig.submissionsTableConfig);\n\t\t},\n\t\terror: function (error) {\n\t\t\tconsole.log(`Error ${error}`);\n\t\t}\n\t});\n}  "
        }
      ],
      "name": "Page 1",
      "renderType": "submittable",
      "type": "page"
    }
  ],
  "securityPolicies": [

  ],
  "slug": "approvals-console",
  "status": "New",
  "submissionLabelExpression": "",
  "type": "Utility"
}