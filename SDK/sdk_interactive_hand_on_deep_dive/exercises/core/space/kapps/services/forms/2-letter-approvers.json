{
  "anonymous": false,
  "attributes": [

  ],
  "bridgedResources": [
    {
      "model": "MDA KS ITSC Approvers",
      "name": "Approvers by Status and Process",
      "order": [

      ],
      "parameters": [
        {
          "mapping": "${values('Process')}",
          "name": "Process"
        },
        {
          "mapping": "Current",
          "name": "Status"
        }
      ],
      "qualification": "By Status and Process",
      "status": "Active"
    },
    {
      "model": "MDA KS ITSC Approvers",
      "name": "Approvers by Status Process and Group Name",
      "order": [

      ],
      "parameters": [
        {
          "mapping": "${values('Group Name')}",
          "name": "Group Name"
        },
        {
          "mapping": "${values('Process')}",
          "name": "Process"
        },
        {
          "mapping": "Current",
          "name": "Status"
        }
      ],
      "qualification": "By Status Process and Group Name",
      "status": "Active"
    },
    {
      "model": "User",
      "name": "User Search",
      "order": [

      ],
      "parameters": [
        {
          "mapping": "${values('Search Typeahead') ? values('Search Typeahead').split(\" \").filter(function(el) {return el.length != 0}).join(\"%\"): \"\"}",
          "name": "Name or Email"
        }
      ],
      "qualification": "By Display Name or Email",
      "status": "Active"
    }
  ],
  "categorizations": [

  ],
  "customHeadContent": "<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-giJF6kkoqNQ00vy+HMDP7azOuL0xtbfIcaT9wjKHr8RbDVddVHyTfAAsrekwKmP1\" crossorigin=\"anonymous\">\n<!-- JavaScript Bundle with Popper -->\n<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-ygbV9kiqUc6oa4msXn9868pTtWMgiQaeYH7/t7LECLbyPA2x65Kgf80OJFdroafW\" crossorigin=\"anonymous\"></script>\n\n\n<!-- <script src=\"https://code.jquery.com/jquery-3.5.1.js\"></script>-->\n<!-- <script src=\"https://cdn.datatables.net/1.10.23/js/jquery.dataTables.min.js\"></script>-->\n<script src=\"https://cdn.datatables.net/rowreorder/1.2.7/js/dataTables.rowReorder.min.js\"></script>\n<link href=\"https://cdn.datatables.net/rowreorder/1.2.7/css/rowReorder.dataTables.min.css\" rel=\"stylesheet\">",
  "description": "",
  "indexDefinitions": [
    {
      "name": "closedBy",
      "parts": [
        "closedBy"
      ],
      "unique": false
    },
    {
      "name": "createdBy",
      "parts": [
        "createdBy"
      ],
      "unique": false
    },
    {
      "name": "handle",
      "parts": [
        "handle"
      ],
      "unique": false
    },
    {
      "name": "submittedBy",
      "parts": [
        "submittedBy"
      ],
      "unique": false
    },
    {
      "name": "updatedBy",
      "parts": [
        "updatedBy"
      ],
      "unique": false
    }
  ],
  "integrations": [

  ],
  "name": "2 Letter Approvers",
  "notes": null,
  "pages": [
    {
      "advanceCondition": null,
      "displayCondition": null,
      "displayPage": null,
      "elements": [
        {
          "type": "content",
          "renderType": "html",
          "name": "Table Element",
          "text": "<table width=\"100%\" style=\"\" id=\"2ltr-approvers-table\" class=\"table table-striped table-bordered dataTable\"></table>",
          "visible": true,
          "renderAttributes": {
          }
        },
        {
          "type": "button",
          "label": "Add New 2 Letter",
          "name": "New Group",
          "visible": true,
          "enabled": true,
          "renderType": "custom",
          "renderAttributes": {
            "id": "new-group"
          },
          "events": [

          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Modal",
          "title": null,
          "visible": true,
          "omitWhenHidden": null,
          "renderAttributes": {
            "class": "modal",
            "id": "eventModal",
            "tabindex": "-1",
            "role": "dialog"
          },
          "elements": [
            {
              "type": "section",
              "renderType": null,
              "name": "modal-dialog",
              "title": null,
              "visible": true,
              "omitWhenHidden": null,
              "renderAttributes": {
                "class": "modal-dialog",
                "role": "document"
              },
              "elements": [
                {
                  "type": "section",
                  "renderType": null,
                  "name": "modal-content",
                  "title": null,
                  "visible": true,
                  "omitWhenHidden": null,
                  "renderAttributes": {
                    "class": "modal-content"
                  },
                  "elements": [
                    {
                      "type": "section",
                      "renderType": null,
                      "name": "modal-header",
                      "title": "Header",
                      "visible": true,
                      "omitWhenHidden": null,
                      "renderAttributes": {
                        "class": "modal-header"
                      },
                      "elements": [

                      ]
                    },
                    {
                      "type": "section",
                      "renderType": null,
                      "name": "modal-body",
                      "title": null,
                      "visible": true,
                      "omitWhenHidden": null,
                      "renderAttributes": {
                        "class": "modal-body"
                      },
                      "elements": [
                        {
                          "type": "field",
                          "name": "Group",
                          "label": "Group",
                          "key": "f4",
                          "defaultValue": null,
                          "defaultResourceName": null,
                          "visible": true,
                          "enabled": true,
                          "required": false,
                          "requiredMessage": null,
                          "omitWhenHidden": null,
                          "pattern": null,
                          "constraints": [

                          ],
                          "events": [

                          ],
                          "renderAttributes": {
                          },
                          "dataType": "string",
                          "renderType": "text",
                          "rows": 1
                        },
                        {
                          "type": "field",
                          "name": "Search Typeahead",
                          "label": "Search Typeahead",
                          "key": "f3",
                          "defaultValue": null,
                          "defaultResourceName": null,
                          "visible": false,
                          "enabled": true,
                          "required": false,
                          "requiredMessage": null,
                          "omitWhenHidden": true,
                          "pattern": null,
                          "constraints": [

                          ],
                          "events": [

                          ],
                          "renderAttributes": {
                            "uses-typeahead": "yes",
                            "typeahead-fa-class": "null",
                            "typeahead-placeholder": "Search For Person",
                            "typeahead-attribute-to-set": "Id",
                            "typeahead-bridged-resource": "User Search",
                            "typeahead-fields-to-set": "Id=People ID,Email=Email,Phone=Phone Number,Display Name=Display Name",
                            "typeahead-attributes-to-show": "Display Name,Phone Number,Email,People ID"
                          },
                          "dataType": "string",
                          "renderType": "text",
                          "rows": 1
                        },
                        {
                          "type": "button",
                          "label": "Add Approver",
                          "name": "Add Approver",
                          "visible": true,
                          "enabled": true,
                          "renderType": "custom",
                          "renderAttributes": {
                            "id": "add-approver"
                          },
                          "events": [

                          ]
                        },
                        {
                          "type": "content",
                          "renderType": "html",
                          "name": "table",
                          "text": "<table width=\"100%\" style=\"\" id=\"approver-group-table\" class=\"table table-striped table-bordered dataTable\"></table>",
                          "visible": true,
                          "renderAttributes": {
                          }
                        }
                      ]
                    },
                    {
                      "type": "section",
                      "renderType": null,
                      "name": "modal-footer",
                      "title": null,
                      "visible": true,
                      "omitWhenHidden": null,
                      "renderAttributes": {
                        "class": "modal-footer"
                      },
                      "elements": [
                        {
                          "type": "button",
                          "label": "Save changes",
                          "name": "Save changes",
                          "visible": true,
                          "enabled": true,
                          "renderType": "custom",
                          "renderAttributes": {
                            "id": "save-approver-group-table"
                          },
                          "events": [

                          ]
                        },
                        {
                          "type": "button",
                          "label": "Close",
                          "name": "Close",
                          "visible": true,
                          "enabled": true,
                          "renderType": "custom",
                          "renderAttributes": {
                            "id": "close-modal"
                          },
                          "events": [

                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Hidden Section",
          "title": null,
          "visible": false,
          "omitWhenHidden": false,
          "renderAttributes": {
          },
          "elements": [
            {
              "type": "field",
              "name": "Process",
              "label": "Process",
              "key": "f5",
              "defaultValue": "2 Letter",
              "defaultResourceName": null,
              "visible": true,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Group Name",
              "label": "Group Name",
              "key": "f1",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            }
          ]
        }
      ],
      "events": [
        {
          "name": "Load Tables and Related Code",
          "type": "Load",
          "action": "Custom",
          "code": "var allGroupsTable ={\n  \"columns\": [\n    {\n      title:\"2-Letter\",\n      data:\"GroupName\",  /*was just 'name'*/\n    },\n    {\n      title:\"Authorized Signatures\",\n      data:\"Memberships\",\n      render:function ( data, type, row, meta ) {\n        console.log('here');\n        console.log(data);\n        return \"<ul style='list-style-type:none;'><li>\" + data.join(\"</li><li>\") + \"</li></ul>\"; // Convert the array of people to an unordered list\n      }    \n    },\n    {\n      title:\"Modified\",\n      data:\"Updated At\"\n    },\n    {\n      data:\"Update\",\n      render: function ( data, type, row, meta ) {\n       return '<button class = \"approver-update\">Update</button>'; // Add Update Button to the row.\n      }\n    },\n  ],\n  dom: 't'\n}\n\nvar singleGroupTable = {\n  \"columns\": [\n    {\n      title:\"Order\",\n      data:\"Approval Order\",\n    },\n    {\n      title:\"Approvers\",\n      data:\"Display Name\",  \n    },{\n      title:\"Login\",\n      data:\"Login\",  \n    },\n    {\n      data:\"Delete\",\n      render:function ( data, type, row, meta ) {\n      return '<button class = \"delete-approver\">Delete</button>';\n     }\n    }\n  ],\n  rowReorder:{ // Allow Click and Drag reorder of Approver Rows\n    dataSrc: 'Approval Order'\n  },\n  dom: 't'\n};\n\n\nfunction load2LetterTable(){\n  K('bridgedResource[Approvers by Status and Process]').load({ \n      success: function(response) { \n//debugger;\n      \n      // If the table exists, don't recreate it, clear and repopulate it\n      if ( $.fn.DataTable.isDataTable( '#2ltr-approvers-table' ) ) {\n        $('#2ltr-approvers-table').DataTable().clear().draw()\n        $('#2ltr-approvers-table').DataTable().rows.add(groups).draw()\n      }\n      // Else create the table\n      else{\n        var tableConfig = $.extend({}, allGroupsTable , {data: response}); //merge the table config with the group data\n        var table = $('#2ltr-approvers-table').DataTable(tableConfig);\n      }\n    }\n  })\n}\n\nload2LetterTable()\n\n/*\n** Bind a click event to the Update Buttons to populate a Table in Modal and show the Modal\n*/\n$('form').on('click', '#2ltr-approvers-table tbody .approver-update', function (){\n  var table = $(this.closest('table')).DataTable();\n  var groupName = table.row( $(this).parents('tr') ).data()[\"GroupName\"];\n  // Execute the \"Approvers by Group Name\" Bridge to retrieve and individual 2 Letter Approval Group\n  K('bridgedResource[Approvers by Status Process and Group Name]').load({ \n    values: {'Group Name' : groupName, 'Process' : K('field[Process]').value()}, \n    success: function(response) { \n      // If the table exists, don't recreate it, clear and repopulate it\n      if ( $.fn.DataTable.isDataTable( '#approver-group-table' ) ) {\n        $('#approver-group-table').DataTable().clear().draw()\n        $('#approver-group-table').DataTable().rows.add(response).draw()\n      }\n      else {      \n        var tableConfig = $.extend({}, singleGroupTable , {data: response}); // merge the table config with the single group data\n        var table = $('#approver-group-table').DataTable(tableConfig);\n      }\n      K('field[Group]').value(groupName);\n      $(K('section[modal-header]').element()).find('h1').html('Update 2 Letter')\n      $('#eventModal').modal('show'); // Show the Modal\n    } \n  });\n});\n\n/*\n** Bind click event to Delete Records Button in the table rows\n*/\n$( \"body\" ).on( \"click\", \"#approver-group-table .delete-approver\", function() {\n  typeof deleteRecords != \"undefined\" ? deleteRecords : deleteRecords = [];\n  var table = $('#approver-group-table').DataTable()\n  var row = table.row( $(this).closest('tr') )\n  var approvalOrder = row.data()['Approval Order'];\n  deleteRecords.push( row.data() );\n  table.row(row.index()).remove()\n  updatedOrder = reorder(table.data(), approvalOrder)\n  table.clear().rows.add(updatedOrder).draw()\n});\n\n/*\n** Bind click event to Add Approver\n*/\n$( \"#add-approver\" ).on( \"click\", function() {\n  K('field[Search Typeahead]').show()\n});\n/*\n** Bind click event to Save Button in the Modal that show and individual Approval Group\n*/\n$( \"#save-approver-group-table\" ).on( \"click\", function() {\n  var table = $('#approver-group-table').DataTable()\n  data = table.data().toArray();\n  runAsyncFunctions(data)\n});\n\n/*\n** Bind click event to Close Button\n*/\n$( \"#close-modal\" ).on( \"click\", function() {\n  $('#eventModal').modal('hide');\n});\n\n/*\n** Bind event listener to Modal Close\n*/\n$(\"#eventModal\").on(\"hidden.bs.modal\", function () {\n    deleteRecords = []; // clear any records of records to be deleted so they are not attempted again after a save or cancel\n});\n\n/*\n** Bind click event to New Group Button\n*/\n$( \"#new-group\" ).on( \"click\", function() {\n  if ( $.fn.DataTable.isDataTable( '#approver-group-table' ) ) {\n    $('#approver-group-table').DataTable().clear().draw()\n  }\n  else {      \n    var table = $('#approver-group-table').DataTable(singleGroupTable);\n  }\n    K('field[Group]').value(null); // Clear Group\n    $(K('section[modal-header]').element()).find('h1').html('Add 2 Letter'); // Modify Modal Title\n    $('#eventModal').modal('show'); // Show the Modal\n});\n\n\n/*\n** Bind events to Search Typeahead\n*/\ntypeAheadSearch( K('form') );\n// Bind an additional event to typeahead select\n$(K('field[Search Typeahead]').element()).bind('typeahead:select', function(ev, suggestion) {\n  // Render the Callback Specified in the Configuration\n  nextRowInt = parseInt( typeof $('#approver-group-table').DataTable().row(':last').data() != \"undefined\" ? $('#approver-group-table').DataTable().row(':last').data()['Approval Order'] : 0 ) + 1;\n  newRow = [{\"Display Name\":suggestion['Display Name'],\"Login\":suggestion['Username'],\"Approval Order\":nextRowInt.toString()}]\n  $('#approver-group-table').DataTable().rows.add(newRow).draw()\n  $(this).typeahead('val','');\n  K('field[Search Typeahead]').hide()\n});\n\n/*\n** Code to update the individual Approvers in each Approval Group.\n*/\nupdateSubmssion = (submission) => {\n  return new Promise((resolve, reject) => {\n    if ('Id' in submission){     \n      K.api(\n        \"PUT\", \n        K('space').attributes()['Web Server Url']+\"/app/api/v1/datastore/submissions/\"+submission[\"Id\"],\n        {\n          data: JSON.stringify({\n          \"values\": {\n            \"Approval Order\": submission[\"Approval Order\"],\n            \"GroupName\": K('field[Group]').value()\n          } }),\n          success: function(response){\n            resolve(response);\n          },\n          error: function(e){\n            reject(e);\n          }\n        }\n      )\n    }\n    else {     \n      K.api(\n        \"POST\", \n        K('space').attributes()['Web Server Url']+\"/app/api/v1/datastore/forms/mdaksitscapprovers/submissions\",\n        {\n          data: JSON.stringify({\n          \"values\": {\n            \"Approval Order\": submission[\"Approval Order\"],\n            \"Display Name\" : submission[\"Display Name\"],\n            \"Login\" : submission[\"Login\"],\n            \"GroupName\": K('field[Group]').value(),\n            \"Process\": K('field[Process]').value(),\n            \"Status\": \"Current\",\n          } }),\n          success: function(response){\n            resolve(response);\n          },\n          error: function(e){\n            reject(e);\n          }\n        }\n      )\n    }\n  })\n}\n\n/*\n** Code to delete individual Approvers in each Approval Group.\n*/\ndeleteSubmssion = (submission) => {\n  return new Promise((resolve, reject) => {\n         K.api(\n          \"DELETE\", \n          K('space').attributes()['Web Server Url']+\"/app/api/v1/datastore/submissions/\"+submission[\"Id\"],\n          {\n            success: function(response){\n              resolve(response);\n            },\n            error: function(e){\n              reject(e);\n            }\n          }\n        )\n  })\n}\n\n/*\n** Code to make the updateSubmssion function asynchronous which will ensure they are all complete and updated before closing the Modal. \n*/\nasync function runAsyncFunctions(submissions){\n  \n  Promise.all(\n    submissions.map(async (submission) => {\n      await updateSubmssion(submission)\n    }),\n    (typeof deleteRecords != \"undefined\" ? deleteRecords : []).map(async (submission) => {\n      await deleteSubmssion(submission)\n    })\n  ).then(\n    function(results){\n      // all promises are resolved\n      $('#eventModal').modal('hide');\n      load2LetterTable();\n\n    }, \n    function(rejection){\n      debugger;\n      // a promise was rejected\n    }\n  );\n}\n\nfunction reorder(data, startValue){\n\treturn data.map(function(row){\n    if(row['Approval Order']>=startValue){\n        row['Approval Order'] = parseInt(row['Approval Order']) - 1\n    }\n    return row\n\t})\n}",
          "bridgedResourceName": null
        }
      ],
      "name": "Page 1",
      "renderType": "submittable",
      "type": "page"
    }
  ],
  "securityPolicies": [

  ],
  "slug": "2-letter-approvers",
  "status": "New",
  "submissionLabelExpression": null,
  "type": "Utility"
}